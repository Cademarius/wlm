import type { Metadata, Viewport } from "next";
import { Analytics } from '@vercel/analytics/react';
import { SpeedInsights } from "@vercel/speed-insights/next";
import "./globals.css";

// Configuration de la police : Les polices doivevent Ãªtre analysÃ©es, choisis, configurÃ©es dans le layout.tsx et utilisÃ©es dans les styles globaux et dans les fonts du projet

// Configuration des mÃ©tadonnÃ©es
export const metadata: Metadata = {
  title: {
    default: "WhoLikeMe - Qui tâ€™aime en secret ? DÃ©couvre-le.",
    template: "%s | WhoLikeMe",
  },
  description:
    "WhoLikeMe est une application sociale pour dÃ©couvrir si ton crush tâ€™aime en retour. Ajoute ton crush en toute discrÃ©tion, sâ€™il te crush aussi câ€™est un match. Sinon, vois ceux qui tâ€™aiment en secret.",
  keywords: [
    "crush secret",
    "application de rencontre",
    "match rÃ©ciproque",
    "crush en retour",
    "rencontres jeunes",
    "rÃ©seau social amoureux",
    "discrÃ©tion",
    "match love",
    "Afrique francophone",
    "Europe francophone",
    "app dating 2025",
    "crush match app",
    "WLM",
    "WhoLikeMe",
  ],
  authors: [{ name: "WLM - WhoLikeMe Team" }],
  openGraph: {
    type: "website",
    locale: "fr_FR",
    siteName: "WhoLikeMe",
    title: "DÃ©couvre si ton crush tâ€™aime aussi - WhoLikeMe",
    description:
      "Ajoute ton crush de maniÃ¨re anonyme. Si câ€™est rÃ©ciproque, câ€™est un match et vous Ãªtes notifiÃ©s. Sinon, vois ceux qui tâ€™aiment en secret.",
    images: [
      {
        url: "/og-image.webp",
        width: 1200,
        height: 630,
        alt: "WhoLikeMe - Application de crush secret",
        type: "image/webp",
      },
    ],
  },
  twitter: {
    card: "summary_large_image",
    title: "Ajoute ton crush. Si câ€™est rÃ©ciproque, câ€™est un match ðŸ’˜",
    description:
      "WhoLikeMe tâ€™aide Ã  dÃ©couvrir en toute discrÃ©tion qui te crush. Match rÃ©ciproque ou secret floutÃ©. Lâ€™amour sans pression.",
    creator: "@wholikeme",
    images: ["/og-image.webp"],
  },
  manifest: "/manifest.json",
  robots: "index, follow",
  themeColor: "#1C1F3F",
};

// Configuration du viewport
export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1,
  maximumScale: 5,
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "#ffffff" },
    { media: "(prefers-color-scheme: dark)", color: "#111111" },
  ],
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="fr">
      <head>
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <meta name="robots" content="index, follow" />
      </head>
      <body className="min-h-screen bg-background antialiased">
        <main className="relative flex min-h-screen flex-col">
          {children}
        </main>
        <Analytics />
        <SpeedInsights />
      </body>
    </html>
  );
}